version: "3"
name: "kafka_testing"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
  broker1:
    image: confluentinc/cp-kafka:7.2.1
    container_name: "broker1"
    hostname: "broker1"
    ports:
      - "9096:9096"
      - "29096:29096"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29096,PLAINTEXT_HOST://localhost:9096
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29096
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    extra_hosts:
      - "moby:127.0.0.1"
    healthcheck:
      test:
        ["CMD", "kafka-topics", "--bootstrap-server", "broker1:29096", "--list"]
      interval: 10s
      timeout: 10s
      retries: 3
  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper
      - broker1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker1:29096"
    extra_hosts:
      - "moby:127.0.0.1"
  kafka-create-topics:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      broker1:
        condition: service_healthy
    hostname: kafka-create-topics
    container_name: kafka-create-topics
    command: " bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b broker1:29096 1 20 && \
      kafka-topics --create --topic myTopic --if-not-exists --bootstrap-server broker1:29096 --partitions 1 --replication-factor 1 && \
      sleep infinity
      '"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    extra_hosts:
      - "moby:127.0.0.1"
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - zookeeper
      - broker1
      - schema-registry
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
